name: SonarQube
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
          
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          
      - name: Install dotnet coverage
        run: dotnet tool install --global dotnet-coverage
        
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"WesselKuijstermans_AvansDevOps" /o:"wesselkuijstermans-1" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths="coverage.xml"
          
          dotnet build AvansDevOps/AvansDevOps.sln

          cd $env:GITHUB_WORKSPACE
          
          dotnet-coverage collect 'dotnet test AvansDevOpsTest/AvansDevOpsTest.csproj --no-build --configuration Release' --output "coverage.xml" --format xml --include-files "AvansDevOps/Entities/*,AvansDevOps/Enums/*,AvansDevOps/FacadePattern/*,AvansDevOps/FactoryPattern/*,AvansDevOps/FormMessageObersverPattern/*,AvansDevOps/ItemStateObserverPattern/*,AvansDevOps/ItemStatePattern/*,AvansDevOps/AdapterPattern/*,AvansDevOps/PipelineStrategyPattern/*,AvansDevOps/SprintStateObersverPattern/*,AvansDevOps/SprintStatePattern/*,AvansDevOps/VersionControlStrategyPattern/*"
         
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

# dotnet-coverage collect 'dotnet test AvansDevOpsTest/AvansDevOpsTest.csproj --no-build --configuration Release' --output $(pwd)/coverage/coverage.cobertura.xml --output-format cobertura
# --exclude "Program.cs" --exclude "ConsoleInputHelper.cs"
