name: Build, Test and Analyze

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ./AvansDevOps/AvansDevOps.sln

      - name: Build
        run: dotnet build ./AvansDevOps/AvansDevOps.sln --no-restore --configuration Release

  test:
    name: Test
    runs-on: windows-latest
    needs: build
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
  
      - name: Restore dependencies
        run: dotnet restore ./AvansDevOps/AvansDevOps.sln
  
      - name: Build
        run: dotnet build ./AvansDevOps/AvansDevOps.sln --no-restore --configuration Release
  
      - name: Run tests and collect coverage
        run: |
          dotnet test ./AvansDevOps/AvansDevOpsTest/AvansDevOpsTest.csproj --configuration Release --no-build --logger "trx;LogFileName=test-execution-report.xml" --collect:"XPlat Code Coverage"
        
      - name: Extract coverage report
        run: |
          $coverageFile = Get-ChildItem -Recurse -Filter "coverage.cobertura.xml" | Select-Object -First 1
          Write-Host "Found coverage file at $($coverageFile.FullName)"
          New-Item -ItemType Directory -Force -Path "TestResults"
          Copy-Item $coverageFile.FullName -Destination "TestResults/coverage.cobertura.xml"
  
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: TestResults/coverage.cobertura.xml

      - name: Upload test execution report artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-execution-report
          path: ./test-execution-report.xml
  
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: windows-latest
    needs: test
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
  
      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner
  
      - name: Restore dependencies
        run: dotnet restore ./AvansDevOps/AvansDevOps.sln
  
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: ./TestResults
  
      - name: Download test execution report artifact
        uses: actions/download-artifact@v4
        with:
          name: test-execution-report
          path: ./TestResults
  
      - name: List TestResults directory (after download)
        run: dir ./TestResults
  
      - name: Begin SonarCloud analysis
        run: dotnet sonarscanner begin /k:"${{ secrets.SONAR_PROJECT_KEY }}" /o:"${{ secrets.SONAR_ORG }}" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="TestResults/coverage.cobertura.xml" /d:sonar.testExecutionReportPaths="TestResults/test-execution-report.xml"
  
      - name: Build
        run: dotnet build ./AvansDevOps/AvansDevOps.sln --no-restore --configuration Release
  
      - name: End SonarCloud analysis
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

